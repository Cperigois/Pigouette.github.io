1. Ajouter lang: en ou lang: fr dans chaque page Markdown
Par exemple, pour _pages/en/black-holes.md :

yaml
Copier
Modifier
---
layout: page
title:
  en: "Black holes & gravitational waves"
  fr: "Trous noirs & ondes gravitationnelles"
lang: en
---
Et pour la version fran√ßaise _pages/fr/‚Ä¶ :

yaml
Copier
Modifier
lang: fr
Cela permet √† Jekyll d‚Äôidentifier la langue active (page.lang).

2. Modifier les layouts pour filtrer la bonne langue
Dans tes fichiers sous _layouts, remplace toute utilisation simple de {{ page.title }} (ou description, menu, etc.) par :

liquid
Copier
Modifier
{% assign current_lang = page.lang | default: site.lang | default: "en" %}
{{ page.title[current_lang] }}
Id√©alement, tu centralises cette logique dans un include, par exemple _includes/lang-setup.html :

liquid
Copier
Modifier
{% assign current_lang = page.lang | default: site.lang | default: "en" %}
Et tu l‚Äôappelles en d√©but de tous tes layouts :

liquid
Copier
Modifier
{% include lang-setup.html %}
<h1>{{ page.title[current_lang] }}</h1>
3. Si tu utilises des donn√©es YAML (_data/‚Ä¶), adapte aussi
Exemple _data/navigation.yml :

yaml
Copier
Modifier
- title:
    en: "Home"
    fr: "Accueil"
  url: "/"
Ensuite dans ton menu :

liquid
Copier
Modifier
{% include lang-setup.html %}
{% for item in site.data.navigation %}
  <a href="{{ item.url }}">{{ item.title[current_lang] }}</a>
{% endfor %}
4. D√©finir une langue par d√©faut dans _config.yml
Dans _config.yml, ajoute :

yaml
Copier
Modifier
lang: en
Cela garantit qu‚Äôen cas d‚Äôoubli, le site utilise l‚Äôanglais par d√©faut, √©vitant les erreurs liquid.

Pourquoi √ßa r√©sout ton souci
Actuellement, sans page.lang, tu affiches toute la structure { "en" => ..., "fr" => ... }. En sp√©cifiant la langue dans la page ET en choisissant dynamiquement la bonne entr√©e dans le dictionnaire, seul le texte dans la langue courante s‚Äôaffiche.

üîß Action rapide
Parcours _pages/en/‚Ä¶ et _pages/fr/‚Ä¶ : ajoute lang: en ou fr.

Dans _layouts/*.html, externe tes acc√®s via page.title[current_lang].

Si tu as _data avec des champs bilingues, adapte pareillement.

Ajoute lang: en dans _config.yml.

Build localement avec bundle exec jekyll serve --safe pour tester sans plugins 
stackoverflow.com
Use 'jekyll-multiple-languages-plugin' with GitHub Pages
24 novembre 2016 ‚Äî How to use 'jekyll-multiple-languages-plugin' on GitHub Pages? It works locally, but I get the following error when I push my sources to GitHub:

docs.github.com
Creating a GitHub Pages site with Jekyll
You can use Jekyll to create a GitHub Pages site in a new or existing repository. Who can use this feature? People with admin permissions for a repository can ...

docs.github.com
About GitHub Pages and Jekyll
Jekyll is a static site generator with built-in support for GitHub Pages and a simplified build process. Jekyll takes Markdown and HTML files and creates a ...
Plus

youtube.com
How To Build A Website | Github Pages | Jekyll | Template - YouTube
28 f√©vrier 2022 ‚Äî ... github keys on your machine 2) Ensure that you have Ruby 2.7.5 (+ devkit package) https://www.ruby-lang.org/en/downloads/ - Run ridk install ...

mikemcquaid.com
Translations With Rails And Jekyll | Mike McQuaid
14 f√©vrier 2018 ‚Äî I've been adding translations to open source Ruby on Rails and GitHub Pages (i.e. GitHub hosted Jekyll) sites I maintain.

github.com
Setting up a GitHub Pages site with Jekyll
Setting up a GitHub Pages site with Jekyll. You can use Jekyll, a popular static site generator, to further customize your GitHub Pages site.

faun.pub
Multilingual Jekyll on GitHub Pages | by Tasos Sangiotis | FAUN
We recently ditched Wordpress for the company site and built something with Jekyll just to make it faster and simplify our tools.

jekyllrb.com
GitHub Pages | Jekyll ‚Ä¢ Simple, blog-aware, static sites
GitHub Pages are powered by Jekyll behind the scenes, so they're a great way to host your Jekyll-powered website for free. Your site is automatically
